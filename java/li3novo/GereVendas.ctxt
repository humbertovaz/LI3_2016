#BlueJ class context
comment0.params=args
comment0.target=void\ main(java.lang.String[])
comment0.text=\n\ @param\ args\ the\ command\ line\ arguments\n\ @throws\ java.io.IOException\n
comment1.params=
comment1.target=int\ mesUtilizador()
comment10.params=l
comment10.target=void\ imprimeLista(java.util.List)
comment11.params=l
comment11.target=void\ imprimeListaPar(java.util.List)
comment12.params=l
comment12.target=void\ imprimeListaParCliente(java.util.List)
comment13.params=l
comment13.target=void\ imprimeListaParClienteQuantidade(java.util.List)
comment14.params=
comment14.target=java.util.List\ carregaCatalgoProduto()
comment14.text=\n\ \ \ \ \ \ \ \ carregar\ os\ produtos\ e\ os\ clientes\n
comment15.params=
comment15.target=java.util.List\ carregaCatalgoClientes()
comment2.params=lista\ tempo
comment2.target=void\ query1(java.util.Set,\ double)
comment3.params=cliente\ vendas\ tempo
comment3.target=void\ query2(int,\ int,\ double)
comment4.params=
comment4.target=void\ carregaMenu()
comment5.params=
comment5.target=void\ waitMenu()
comment5.text=\n\ Server\ para\ que\ o\ menu\ n\u00E3o\ desapareca\n
comment6.params=
comment6.target=void\ clear()
comment6.text=\n\ Este\ metodo\ imprime\ 50\ vezes\ uma\ linha\ vazia,\ em\ que\ no\ fim\ desta\ linha\n\ ap\ automaticamente\ colocado\ um\ '\\n'.\ Isto\ serve\ para\ que\ seja\ mais\ facil\n\ a\ leitura\ por\ exemplo\ de\ um\ menu,\ em\ que\ assim\ so\ aparece\ o\ menu\ com\ o\n\ qual\ estamos\ efetivamente\ a\ interagir.\n
comment7.params=
comment7.target=void\ carregaFicheiros()
comment7.text=\n\ Carrega\ os\ ficheiros\ de\ texto\n
comment8.params=
comment8.target=java.util.List\ carregaCompras()
comment9.params=linha
comment9.target=Venda\ parseLinhaVenda(java.lang.String)
comment9.text=\n\ \ \ \ \ 0\ e\ o\ codigo\ produto\n\ \ \ \ 1\ e\ o\ preco\n\ \ \ \ 2\ e\ a\ quantidade\ \n\ \ \ \ 3\ modo\ de\ compra\n\ \ \ \ 4\ codigo\ cliente\n\ \ \ \ 5\ mes\ \n\ \ \ \ 6\ filial\n
numComments=16
